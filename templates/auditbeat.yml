auditbeat.modules:

- module: auditd
  resolve_ids: true
  failure_mode: silent
  backlog_limit: 8196
  rate_limit: 0
  include_raw_message: false
  include_warnings: false
  audit_rules: |
    ## Define audit rules here.
    ## Create file watches (-w) or syscall audits (-a action,filter).
    ## * action can be either always or never.
    ## * filter specifies which kernel rule-matching filter is applied to the event,
    ##   which can be one of the following: task, exit, user, and exclude.
    ## Several system calls can be grouped into one rule, each specified after the -S option.
    ## For a full list of system calls see /usr/include/x86_64-linux-gnu/asm/unistd_64.h.
    ## Add a keyword (-k) to the log event.

- module: system
  datasets:
    - host
    - user
    - package
    - login
  period: 1m
  user.detect_password_changes: true

- module: system
  datasets:
    - process
    - socket
  period: 2s

- module: file_integrity
  paths:
  - /var/www/html/
  exclude_files:
  - '(?i)\.sw[nopx]$'
  - '~$'
  scan_at_start: true
  scan_rate_per_sec: 50 MiB
  file.max_file_size: 10 MiB
  file.hash_types: [sha1]


name: "{{ inventory_hostname }}"
tags: ["{{ env }}", "lightsail"]


processors:
- add_cloud_metadata: ~
- add_host_metadata: ~


monitoring.enabled: true


output.elasticsearch:
  hosts: ["{{ elasticsearch_host }}"]
  username: "{{ elasticsearch_user }}"
  password: "${ES_PWD}"


setup:
  kibana:
    host: "{{ kibana_host }}"
    username: "{{ elasticsearch_user }}"
    password: "${ES_PWD}"
  dashboards.enabled: true
